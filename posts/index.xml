<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 呆呆的小窝~</title>
        <link>https://0xdaidai.github.io/posts/</link>
        <description>All Posts | 呆呆的小窝~</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 25 Sep 2023 11:38:20 &#43;0800</lastBuildDate><atom:link href="https://0xdaidai.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Optee_template</title>
    <link>https://0xdaidai.github.io/optee_template/</link>
    <pubDate>Mon, 25 Sep 2023 11:38:20 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/optee_template/</guid>
    <description><![CDATA[ta 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 //------------------------------------------------ //--- 010 Editor v10.0.2 Binary Template // // File: // Authors: // Version: // Purpose: // Category: // File Mask: // ID Bytes: // History: //------------------------------------------------ #define TEE_FS_HTREE_IV_SIZE 16 #define TEE_FS_HTREE_TAG_SIZE 16 #define TEE_FS_HTREE_FEK_SIZE 16 typedef struct _tee_fs_htree_meta { UINT64 length; }tee_fs_htree_meta; typedef struct _tee_fs_htree_imeta { struct tee_fs_htree_meta meta; UINT32 max_node_id; UINT32 nop; }tee_fs_htree_imeta; typedef struct _tee_fs_htree_image { UCHAR iv[TEE_FS_HTREE_IV_SIZE]; UCHAR tag[TEE_FS_HTREE_TAG_SIZE]; UCHAR enc_fek[TEE_FS_HTREE_FEK_SIZE]; UCHAR imeta[sizeof(struct tee_fs_htree_imeta)]; UINT32 counter; }tee_fs_htree_image; #define TEE_FS_HTREE_HASH_SIZE	32 #define TEE_FS_HTREE_IV_SIZE 16 #define TEE_FS_HTREE_TAG_SIZE 16 typedef struct _tee_fs_htree_node_image { /* Note that calc_node_hash() depends on hash first in struct */ UCHAR hash[TEE_FS_HTREE_HASH_SIZE]; UCHAR iv[TEE_FS_HTREE_IV_SIZE]; UCHAR tag[TEE_FS_HTREE_TAG_SIZE]; USHORT flags; }tee_fs_htree_node_image; //-------------------------------------- LittleEndian(); tee_fs_htree_image ver0_head; tee_fs_htree_image ver1_head; FSeek(0x1000); tee_fs_htree_node_image ver0_root_node; tee_fs_htree_node_image ver1_root_node; FSeek(0x2000); encrypted ta 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 //------------------------------------------------ //--- 010 Editor v10.]]></description>
</item>
<item>
    <title>Kernel</title>
    <link>https://0xdaidai.github.io/kernel/</link>
    <pubDate>Mon, 25 Sep 2023 11:37:02 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/kernel/</guid>
    <description><![CDATA[cpio 1 2 3 4 5 6 7 8 gcc -o exp -static exp.c -masm=intel -s -lpthread mv ./exp ./initramfs cd initramfs find . -print0 \ | cpio --null -ov --format=newc \ | gzip -9 &gt; ../initramfs.cpio.gz cd .. mount 1 2 # ext4 sudo mount -o rw -osync -o auto -o exec rootfs.img rootfs 模板 1 2 3 4 5 6 7 8 9 10 11 12 13]]></description>
</item>
<item>
    <title>Mixed_c_with_asm</title>
    <link>https://0xdaidai.github.io/mixed_c_with_asm/</link>
    <pubDate>Mon, 25 Sep 2023 11:31:57 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/mixed_c_with_asm/</guid>
    <description><![CDATA[前几天群里提到的问题，简单记录下查阅到的方法。 在C中调用汇编中定义的函数 以Linux x86为例，用汇编语言编写一个hello_world函数]]></description>
</item>
<item>
    <title>Adb</title>
    <link>https://0xdaidai.github.io/adb/</link>
    <pubDate>Mon, 25 Sep 2023 11:27:06 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/adb/</guid>
    <description><![CDATA[USE ADB in WSL 1 2 3 # ADB export PATH=&#34;$PATH:/mnt/d/Tools/Android/SDK/platform-tools&#34; alias adb=&#34;/mnt/d/Tools/Android/SDK/platform-tools/adb.exe&#34; 由于将adb的路径alias后，默认在sh中是找不到的，若想在sh脚本中使用ADB，需在脚本前添加以下代码: 1 2 #!/bin/bash]]></description>
</item>
<item>
    <title>Misc</title>
    <link>https://0xdaidai.github.io/misc/</link>
    <pubDate>Mon, 25 Sep 2023 11:22:31 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/misc/</guid>
    <description><![CDATA[exp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 from pwn import * import sys context.log_level = &#34;debug&#34; if len(sys.argv) &lt; 2: debug = True else: debug = False if debug: p = process(&#34;./&#34;) libc = ELF(&#34;/lib/x86_64-linux-gnu/libc.so.6&#34;) else: p = remote(&#34;&#34;,) libc = ELF(&#34;./libc-2.31.so&#34;) ru]]></description>
</item>
<item>
    <title>Friends</title>
    <link>https://0xdaidai.github.io/friends/</link>
    <pubDate>Sun, 05 Mar 2023 02:03:29 &#43;0800</pubDate>
    <author>0xdaidai</author>
    <guid>https://0xdaidai.github.io/friends/</guid>
    <description><![CDATA[or4nge 小橘子真好吃~ s0uthwood 逆向天花板 t1anst GOD ttt triplewings next master of pwn Mobilis In Mobili_ 中本航 ssgss web king pil10w yet another web king s1eepy know any except misc newbiereer 一曲长歌，一剑天涯 wood stay hungry stay foolish. crazyman CTF还得看空白神]]></description>
</item>
</channel>
</rss>
